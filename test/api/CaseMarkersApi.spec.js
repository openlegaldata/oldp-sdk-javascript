/**
 * Open Legal Data API
 * With the Open Legal Data API you can access various data from the legal domain, e.g. law text or case files. The data may be used for semantic analysis or to create statistics. For more information visit our website. https://openlegaldata.io/
 *
 * OpenAPI spec version: v1
 * Contact: hello@openlegaldata.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenLegalDataJavaScriptApi);
  }
}(this, function(expect, OpenLegalDataJavaScriptApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenLegalDataJavaScriptApi.CaseMarkersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CaseMarkersApi', function() {
    describe('caseMarkersCreate', function() {
      it('should call caseMarkersCreate successfully', function(done) {
        //uncomment below and update the code to test caseMarkersCreate
        //instance.caseMarkersCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('caseMarkersDelete', function() {
      it('should call caseMarkersDelete successfully', function(done) {
        //uncomment below and update the code to test caseMarkersDelete
        //instance.caseMarkersDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('caseMarkersList', function() {
      it('should call caseMarkersList successfully', function(done) {
        //uncomment below and update the code to test caseMarkersList
        //instance.caseMarkersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('caseMarkersPartialUpdate', function() {
      it('should call caseMarkersPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test caseMarkersPartialUpdate
        //instance.caseMarkersPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('caseMarkersRead', function() {
      it('should call caseMarkersRead successfully', function(done) {
        //uncomment below and update the code to test caseMarkersRead
        //instance.caseMarkersRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('caseMarkersUpdate', function() {
      it('should call caseMarkersUpdate successfully', function(done) {
        //uncomment below and update the code to test caseMarkersUpdate
        //instance.caseMarkersUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
