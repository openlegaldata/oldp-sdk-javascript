/**
 * Open Legal Data API
 * With the Open Legal Data API you can access various data from the legal domain, e.g. law text or case files. The data may be used for semantic analysis or to create statistics. For more information visit our website. https://openlegaldata.io/
 *
 * OpenAPI spec version: v1
 * Contact: hello@openlegaldata.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.1
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AnnotationLabel', 'model/CaseAnnotation', 'model/CaseMarker', 'model/CaseSearch', 'model/City', 'model/Country', 'model/Court', 'model/CourtMinimal', 'model/InlineResponse200', 'model/InlineResponse2001', 'model/InlineResponse20010', 'model/InlineResponse20011', 'model/InlineResponse20012', 'model/InlineResponse2002', 'model/InlineResponse2003', 'model/InlineResponse2004', 'model/InlineResponse2005', 'model/InlineResponse2006', 'model/InlineResponse2007', 'model/InlineResponse2008', 'model/InlineResponse2009', 'model/Law', 'model/LawBook', 'model/LawSearch', 'model/ModelCase', 'model/State', 'model/User', 'api/AnnotationLabelsApi', 'api/CaseAnnotationsApi', 'api/CaseMarkersApi', 'api/CasesApi', 'api/CitiesApi', 'api/CountriesApi', 'api/CourtsApi', 'api/LawBooksApi', 'api/LawsApi', 'api/StatesApi', 'api/TokenAuthApi', 'api/UsersApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AnnotationLabel'), require('./model/CaseAnnotation'), require('./model/CaseMarker'), require('./model/CaseSearch'), require('./model/City'), require('./model/Country'), require('./model/Court'), require('./model/CourtMinimal'), require('./model/InlineResponse200'), require('./model/InlineResponse2001'), require('./model/InlineResponse20010'), require('./model/InlineResponse20011'), require('./model/InlineResponse20012'), require('./model/InlineResponse2002'), require('./model/InlineResponse2003'), require('./model/InlineResponse2004'), require('./model/InlineResponse2005'), require('./model/InlineResponse2006'), require('./model/InlineResponse2007'), require('./model/InlineResponse2008'), require('./model/InlineResponse2009'), require('./model/Law'), require('./model/LawBook'), require('./model/LawSearch'), require('./model/ModelCase'), require('./model/State'), require('./model/User'), require('./api/AnnotationLabelsApi'), require('./api/CaseAnnotationsApi'), require('./api/CaseMarkersApi'), require('./api/CasesApi'), require('./api/CitiesApi'), require('./api/CountriesApi'), require('./api/CourtsApi'), require('./api/LawBooksApi'), require('./api/LawsApi'), require('./api/StatesApi'), require('./api/TokenAuthApi'), require('./api/UsersApi'));
  }
}(function(ApiClient, AnnotationLabel, CaseAnnotation, CaseMarker, CaseSearch, City, Country, Court, CourtMinimal, InlineResponse200, InlineResponse2001, InlineResponse20010, InlineResponse20011, InlineResponse20012, InlineResponse2002, InlineResponse2003, InlineResponse2004, InlineResponse2005, InlineResponse2006, InlineResponse2007, InlineResponse2008, InlineResponse2009, Law, LawBook, LawSearch, ModelCase, State, User, AnnotationLabelsApi, CaseAnnotationsApi, CaseMarkersApi, CasesApi, CitiesApi, CountriesApi, CourtsApi, LawBooksApi, LawsApi, StatesApi, TokenAuthApi, UsersApi) {
  'use strict';

  /**
   * With_the_Open_Legal_Data_API_you_can_access_various_data_from_the_legal_domain_e_g__law_text_or_case_files__The_data_may_be_used_for_semantic_analysis_or_to_create_statistics__For_more_information_visit_our_website__httpsopenlegaldata_io.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var OldpApi = require('index'); // See note below*.
   * var xxxSvc = new OldpApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new OldpApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new OldpApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new OldpApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version v1
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AnnotationLabel model constructor.
     * @property {module:model/AnnotationLabel}
     */
    AnnotationLabel: AnnotationLabel,
    /**
     * The CaseAnnotation model constructor.
     * @property {module:model/CaseAnnotation}
     */
    CaseAnnotation: CaseAnnotation,
    /**
     * The CaseMarker model constructor.
     * @property {module:model/CaseMarker}
     */
    CaseMarker: CaseMarker,
    /**
     * The CaseSearch model constructor.
     * @property {module:model/CaseSearch}
     */
    CaseSearch: CaseSearch,
    /**
     * The City model constructor.
     * @property {module:model/City}
     */
    City: City,
    /**
     * The Country model constructor.
     * @property {module:model/Country}
     */
    Country: Country,
    /**
     * The Court model constructor.
     * @property {module:model/Court}
     */
    Court: Court,
    /**
     * The CourtMinimal model constructor.
     * @property {module:model/CourtMinimal}
     */
    CourtMinimal: CourtMinimal,
    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200: InlineResponse200,
    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001: InlineResponse2001,
    /**
     * The InlineResponse20010 model constructor.
     * @property {module:model/InlineResponse20010}
     */
    InlineResponse20010: InlineResponse20010,
    /**
     * The InlineResponse20011 model constructor.
     * @property {module:model/InlineResponse20011}
     */
    InlineResponse20011: InlineResponse20011,
    /**
     * The InlineResponse20012 model constructor.
     * @property {module:model/InlineResponse20012}
     */
    InlineResponse20012: InlineResponse20012,
    /**
     * The InlineResponse2002 model constructor.
     * @property {module:model/InlineResponse2002}
     */
    InlineResponse2002: InlineResponse2002,
    /**
     * The InlineResponse2003 model constructor.
     * @property {module:model/InlineResponse2003}
     */
    InlineResponse2003: InlineResponse2003,
    /**
     * The InlineResponse2004 model constructor.
     * @property {module:model/InlineResponse2004}
     */
    InlineResponse2004: InlineResponse2004,
    /**
     * The InlineResponse2005 model constructor.
     * @property {module:model/InlineResponse2005}
     */
    InlineResponse2005: InlineResponse2005,
    /**
     * The InlineResponse2006 model constructor.
     * @property {module:model/InlineResponse2006}
     */
    InlineResponse2006: InlineResponse2006,
    /**
     * The InlineResponse2007 model constructor.
     * @property {module:model/InlineResponse2007}
     */
    InlineResponse2007: InlineResponse2007,
    /**
     * The InlineResponse2008 model constructor.
     * @property {module:model/InlineResponse2008}
     */
    InlineResponse2008: InlineResponse2008,
    /**
     * The InlineResponse2009 model constructor.
     * @property {module:model/InlineResponse2009}
     */
    InlineResponse2009: InlineResponse2009,
    /**
     * The Law model constructor.
     * @property {module:model/Law}
     */
    Law: Law,
    /**
     * The LawBook model constructor.
     * @property {module:model/LawBook}
     */
    LawBook: LawBook,
    /**
     * The LawSearch model constructor.
     * @property {module:model/LawSearch}
     */
    LawSearch: LawSearch,
    /**
     * The ModelCase model constructor.
     * @property {module:model/ModelCase}
     */
    ModelCase: ModelCase,
    /**
     * The State model constructor.
     * @property {module:model/State}
     */
    State: State,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The AnnotationLabelsApi service constructor.
     * @property {module:api/AnnotationLabelsApi}
     */
    AnnotationLabelsApi: AnnotationLabelsApi,
    /**
     * The CaseAnnotationsApi service constructor.
     * @property {module:api/CaseAnnotationsApi}
     */
    CaseAnnotationsApi: CaseAnnotationsApi,
    /**
     * The CaseMarkersApi service constructor.
     * @property {module:api/CaseMarkersApi}
     */
    CaseMarkersApi: CaseMarkersApi,
    /**
     * The CasesApi service constructor.
     * @property {module:api/CasesApi}
     */
    CasesApi: CasesApi,
    /**
     * The CitiesApi service constructor.
     * @property {module:api/CitiesApi}
     */
    CitiesApi: CitiesApi,
    /**
     * The CountriesApi service constructor.
     * @property {module:api/CountriesApi}
     */
    CountriesApi: CountriesApi,
    /**
     * The CourtsApi service constructor.
     * @property {module:api/CourtsApi}
     */
    CourtsApi: CourtsApi,
    /**
     * The LawBooksApi service constructor.
     * @property {module:api/LawBooksApi}
     */
    LawBooksApi: LawBooksApi,
    /**
     * The LawsApi service constructor.
     * @property {module:api/LawsApi}
     */
    LawsApi: LawsApi,
    /**
     * The StatesApi service constructor.
     * @property {module:api/StatesApi}
     */
    StatesApi: StatesApi,
    /**
     * The TokenAuthApi service constructor.
     * @property {module:api/TokenAuthApi}
     */
    TokenAuthApi: TokenAuthApi,
    /**
     * The UsersApi service constructor.
     * @property {module:api/UsersApi}
     */
    UsersApi: UsersApi
  };

  return exports;
}));
