/**
 * Open Legal Data API
 * With the Open Legal Data API you can access various data from the legal domain, e.g. law text or case files. The data may be used for semantic analysis or to create statistics. For more information visit our website. https://openlegaldata.io/
 *
 * OpenAPI spec version: v1
 * Contact: hello@openlegaldata.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.OldpApi) {
      root.OldpApi = {};
    }
    root.OldpApi.Court = factory(root.OldpApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Court model module.
   * @module model/Court
   * @version v1
   */

  /**
   * Constructs a new <code>Court</code>.
   * @alias module:model/Court
   * @class
   * @param name {String} Full name of the court with location
   * @param state {Number} Court belongs to this state (derive country of this field)
   * @param code {String} Unique court identifier based on ECLI (e.g. BVerfG)
   * @param slug {String} Type & city name as lowercase
   */
  var exports = function(name, state, code, slug) {
    var _this = this;


    _this['name'] = name;


    _this['state'] = state;
    _this['code'] = code;
    _this['slug'] = slug;










  };

  /**
   * Constructs a <code>Court</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Court} obj Optional instance to populate.
   * @return {module:model/Court} The populated <code>Court</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('court_type')) {
        obj['court_type'] = ApiClient.convertToType(data['court_type'], 'String');
      }
      if (data.hasOwnProperty('city')) {
        obj['city'] = ApiClient.convertToType(data['city'], 'Number');
      }
      if (data.hasOwnProperty('state')) {
        obj['state'] = ApiClient.convertToType(data['state'], 'Number');
      }
      if (data.hasOwnProperty('code')) {
        obj['code'] = ApiClient.convertToType(data['code'], 'String');
      }
      if (data.hasOwnProperty('slug')) {
        obj['slug'] = ApiClient.convertToType(data['slug'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('image')) {
        obj['image'] = ApiClient.convertToType(data['image'], 'String');
      }
      if (data.hasOwnProperty('homepage')) {
        obj['homepage'] = ApiClient.convertToType(data['homepage'], 'String');
      }
      if (data.hasOwnProperty('street_address')) {
        obj['street_address'] = ApiClient.convertToType(data['street_address'], 'String');
      }
      if (data.hasOwnProperty('postal_code')) {
        obj['postal_code'] = ApiClient.convertToType(data['postal_code'], 'String');
      }
      if (data.hasOwnProperty('address_locality')) {
        obj['address_locality'] = ApiClient.convertToType(data['address_locality'], 'String');
      }
      if (data.hasOwnProperty('telephone')) {
        obj['telephone'] = ApiClient.convertToType(data['telephone'], 'String');
      }
      if (data.hasOwnProperty('fax_number')) {
        obj['fax_number'] = ApiClient.convertToType(data['fax_number'], 'String');
      }
      if (data.hasOwnProperty('jurisdiction')) {
        obj['jurisdiction'] = ApiClient.convertToType(data['jurisdiction'], 'String');
      }
      if (data.hasOwnProperty('level_of_appeal')) {
        obj['level_of_appeal'] = ApiClient.convertToType(data['level_of_appeal'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Full name of the court with location
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Court type AG,VG,...
   * @member {String} court_type
   */
  exports.prototype['court_type'] = undefined;
  /**
   * Court belongs to this city, if null court is state-level
   * @member {Number} city
   */
  exports.prototype['city'] = undefined;
  /**
   * Court belongs to this state (derive country of this field)
   * @member {Number} state
   */
  exports.prototype['state'] = undefined;
  /**
   * Unique court identifier based on ECLI (e.g. BVerfG)
   * @member {String} code
   */
  exports.prototype['code'] = undefined;
  /**
   * Type & city name as lowercase
   * @member {String} slug
   */
  exports.prototype['slug'] = undefined;
  /**
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * @member {String} image
   */
  exports.prototype['image'] = undefined;
  /**
   * Official court homepage
   * @member {String} homepage
   */
  exports.prototype['homepage'] = undefined;
  /**
   * Street address with house number
   * @member {String} street_address
   */
  exports.prototype['street_address'] = undefined;
  /**
   * Postal code (ZIP code)
   * @member {String} postal_code
   */
  exports.prototype['postal_code'] = undefined;
  /**
   * Locality (city name)
   * @member {String} address_locality
   */
  exports.prototype['address_locality'] = undefined;
  /**
   * Telephone number
   * @member {String} telephone
   */
  exports.prototype['telephone'] = undefined;
  /**
   * Fax number
   * @member {String} fax_number
   */
  exports.prototype['fax_number'] = undefined;
  /**
   * Jurisdiction of court (ordinary, civil, ...)
   * @member {String} jurisdiction
   */
  exports.prototype['jurisdiction'] = undefined;
  /**
   * Subject-matter jurisdiction (local, federal, high court, ...)
   * @member {String} level_of_appeal
   */
  exports.prototype['level_of_appeal'] = undefined;



  return exports;
}));


